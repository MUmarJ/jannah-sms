[project]
name = "jannah-sms-fastapi"
version = "2.0.0"
description = "Modern SMS scheduling system for property management with elderly-friendly interface"
authors = [{ name = "Jannah SMS Team", email = "admin@jannah-sms.com" }]
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.115.13",
    "uvicorn[standard]>=0.32.1",
    "jinja2>=3.1.4",
    "python-multipart>=0.0.17",
    "pydantic-settings>=2.7.0",
    "sqlalchemy>=2.0.36",
    "apscheduler>=4.1.0",
    "requests>=2.32.3",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "httpx>=0.28.1",
    "black>=24.10.0",
    "ruff>=0.8.4",
    "isort>=5.13.0",
    "pre-commit>=3.5.0",
]

[build-system]
requires = ["flit_core<4"]
build-backend = "flit_core.buildapi"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
known_first_party = ["app"]
known_third_party = ["fastapi", "pydantic", "sqlalchemy", "starlette"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",    # line too long (handled by black)
    "E712",    # comparison to True/False
    "E722",    # bare except
    "B008",    # do not perform function calls in argument defaults
    "B904",    # use raise from
    "PLR0911", # too many return statements
    "PLR0912", # too many branches
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
    "PLR2004", # magic value in comparison
    "RET504",  # unnecessary assignment before return
    "RET505",  # unnecessary else after return
    "SIM102",  # use single if instead of nested
    "SIM105",  # use contextlib.suppress
    "SIM108",  # use ternary operator
    "SIM114",  # combine if branches using logical or
    "SIM116",  # use dictionary instead of if statements
    "SIM117",  # use single with statement
    "SIM118",  # use key in dict instead of key in dict.keys()
    "ARG001",  # unused function argument
    "ARG002",  # unused method argument
    "F821",    # undefined name
    "F841",    # local variable assigned but never used
    "N805",    # first argument of a method should be named self
    "N815",    # variable in class scope should not be mixedCase
    "RET506",  # unnecessary else after raise
    "UP007",   # use X | Y for type annotations (requires Python 3.10+)
    "T201",    # print found (allow for scripts)
    "PTH110",  # os.path.exists should be Path.exists
    "PTH204",  # os.path.getmtime should be Path.stat
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*" = ["S101", "ARG001"]
"migrations/*" = ["ALL"]
"theme_switcher.py" = ["ALL"]    # utility script
"**/check_*.py" = ["ALL"]        # utility scripts
"**/manual_*.py" = ["ALL"]       # utility scripts
"**/send_*.py" = ["ALL"]         # utility scripts
"**/test_*.py" = ["ALL"]         # test scripts

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.pydocstyle]
convention = "google"
add-ignore = ["D100", "D104", "D105", "D106", "D107", "D200", "D205", "D212"]
# D100: Missing docstring in public module
# D104: Missing docstring in public package
# D105: Missing docstring in magic method
# D106: Missing docstring in public nested class
# D107: Missing docstring in __init__
# D200: One-line docstring should fit on one line
# D205: 1 blank line required between summary and description
# D212: Multi-line docstring summary should start at the first line

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["."]
